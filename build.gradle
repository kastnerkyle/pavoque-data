buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath group: 'org.yaml', name: 'snakeyaml', version: '1.17'
    }
}

import org.yaml.snakeyaml.DumperOptions
import org.yaml.snakeyaml.Yaml

group 'de.dfki.mary'
version '0.2-SNAPSHOT'
description 'The PAVOQUE corpus of expressive speech'

subprojects {
    apply plugin: 'base'

    repositories {
        ivy {
            url 'http://mary.dfki.de/download/pavoque-data'
            layout 'pattern', {
                artifact 'Recordings/[artifact].[ext]'
            }
        }
    }

    dependencies {
        'default' name: project.name, ext: 'tar'
    }

    task download(type: Copy) {
        from configurations.default
        into "$rootDir/Recordings"
        rename { "${project.name}.tar" }
    }
}

task yaml << {
    def options = new DumperOptions()
    options.defaultFlowStyle = DumperOptions.FlowStyle.BLOCK
    def yaml = new Yaml(options)
    def stylemap = [
            Neutral: 'neutral',
            Poker  : 'poker',
            Poppy  : 'happy',
            Obadiah: 'sad',
            Spike  : 'angry'
    ]
    def data = yaml.load(file('pavoque_wav.yaml').newReader()).findAll {
        it.rate == 44100 && it.date.startsWith('2007')
    }.sort {
        it.date
    }.collect {
        it - [rate: it.rate] + [style: stylemap[(it.file =~ /.+\/(Stefan|Nach)(.+?)\/.+/)[0][2]]]
    }
    stylemap.values().each { style ->
        file("pavoque-${style}.yaml").text = yaml.dump(data.findAll {
            it.style == style && !it.file.contains('nonfinal')
        })
    }
    file("pavoque-outtakes.yaml").text = yaml.dump(data.findAll {
        it.file.contains('nonfinal')
    })
}
